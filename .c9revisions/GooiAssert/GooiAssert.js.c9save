{"ts":1351128164006,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"﻿﻿var Gooi = Gooi || {};\nvar Gooi_Globals_Assert_ignore = false; \nvar Gooi_Globals_Assert_WARN = false; \nGooi.assert = function () {\n\n    this.AssertException = function () {\n        var ExceptionBase = {}\n\n        ExceptionBase.message = arguments[1]\n        ExceptionBase.valid = arguments[0]\n        ExceptionBase.arguments = Array.prototype.slice.call(arguments)\n\n        ExceptionBase.toString = function () {\n            return 'AssertException: ' + this.arguments.slice(1).join(' : ')\n        }\n        return ExceptionBase; \n    }\n    \n    if( (! arguments[0] ) && Gooi_Globals_Assert_ignore != true ){ \n        if(! Gooi_Globals_Assert_WARN ){\n            throw this.AssertException.apply( this, arguments ) \n        }else{\n            var ex = this.AssertException.apply( this, arguments )\n            console.warn( ex, ex.message  )\n        }\n    }\n\n}\n\nGooi.Assert =  ( function (base) {\n    _ignore = function(){ return Gooi_Globals_Assert_ignore }\n    \n    base.areEqual = function(   val1, val2, message  ){\n         if(! _ignore() )   \n            return  Gooi.assert(val1 === val2, message || \"Values are not equal\" )\n    }\n\n    base.isString = function(val1, message){\n         if(! _ignore() )   \n            return  Gooi.assert(typeof val1 === 'string', message || \"Value is not a string\" )\n    }\n\n    base.isNumber = function(val1, message){\n         if(! _ignore() )   \n            return  Gooi.assert(typeof val1 === 'number', message || \"Value is not a number\" )\n    }\n\n    base.isDate = function(val1, message){\n         if(! _ignore() ) {  \n            return  Gooi.assert( val1 instanceof Date && !isNaN(val1.getTime() ), message  || \"Value is not a date\")\n            }\n    }\n\n    //base.isBoolean\n    //base.isObject\n    //base.isTypeOf\n    //base.isInstanceOf\n    //base.isFalse        \n    //base.isTrue         \n    //base.isNaN          \n    //base.isNotNaN       \n    //base.isNull         \n    //base.isNotNull      \n    //base.isUndefined    \n    //base.isNotUndefined \n\n//Set Global Assert Ignore\n    base.__defineGetter__(\"ignore\", function(){ return Gooi_Globals_Assert_ignore })\n    base.__defineSetter__(\"ignore\", function( value ){ Gooi_Globals_Assert_ignore = value }) \n//Set Global Assert Warn Only\n    base.__defineGetter__(\"warn\", function(){ return Gooi_Globals_Assert_WARN })\n    base.__defineSetter__(\"warn\", function( value ){ Gooi_Globals_Assert_WARN = value }) \n\n    return base;\n\n}( new Object ));   \n\n"]],"start1":0,"start2":0,"length1":0,"length2":2454}]],"length":2454}
{"contributors":[],"silentsave":false,"ts":1351128476652,"patch":[[{"diffs":[[-1,"﻿﻿"],[1,"/*jshint asi: true*/\n"],[0,"var "]],"start1":0,"start2":0,"length1":6,"length2":25},{"diffs":[[0," = false"],[-1,"; "],[0,"\nvar Goo"]],"start1":74,"start2":74,"length1":18,"length2":16},{"diffs":[[0," = false"],[-1,"; "],[1,"\n"],[0,"\nGooi.as"]],"start1":111,"start2":111,"length1":18,"length2":17},{"diffs":[[0,"ase;\n\n}("],[1," Gooi.Assert ||"],[0," new Obj"]],"start1":2442,"start2":2442,"length1":16,"length2":31}]],"length":2485,"saved":false}
{"ts":1351128511881,"patch":[[{"diffs":[[0,"gnore !="],[1,"="],[0," true ){"]],"start1":610,"start2":610,"length1":16,"length2":17},{"diffs":[[0,") {\n    "],[1,"var "],[0,"_ignore "]],"start1":912,"start2":912,"length1":16,"length2":20}]],"length":2490,"saved":false}
{"ts":1351128537866,"patch":[[{"diffs":[[0,"Base.arg"],[-1,"ument"],[0,"s = Arra"]],"start1":328,"start2":328,"length1":21,"length2":16},{"diffs":[[0,"this.arg"],[-1,"ument"],[0,"s.slice("]],"start1":467,"start2":467,"length1":21,"length2":16}]],"length":2480,"saved":false}
{"ts":1351129148905,"patch":[[{"diffs":[[0,"int asi:"],[-1," "],[1,"true supernew:"],[0,"true"],[1," "],[0,"*/\nvar G"]],"start1":5,"start2":5,"length1":21,"length2":35},{"diffs":[[0,"w Object"],[1,"()"],[0," ));   \n"]],"start1":2477,"start2":2477,"length1":16,"length2":18}]],"length":2496,"saved":false}
{"ts":1351129400091,"patch":[[{"diffs":[[0,"asi:true"],[1,","],[0," superne"]],"start1":9,"start2":9,"length1":16,"length2":17},{"diffs":[[0," Object("],[1,"null"],[0,") ));   "]],"start1":2479,"start2":2479,"length1":16,"length2":20}]],"length":2501,"saved":false}
{"ts":1351129411777,"patch":[[{"diffs":[[0," || "],[-1,"new Object(null)"],[1,"{}"],[0," ));"]],"start1":2472,"start2":2472,"length1":24,"length2":10}]],"length":2487,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351131756090,"patch":[[{"diffs":[[0,"   }\n    }\n\n"],[1,"    base.isInstanceOf = function(val, type, message){\n         if(! _ignore() )   \n            return  Gooi.assert( val instanceof type, message || \"Value is not an instance of \" + type.totoString  )\n    }\n\n"],[0,"    //base.i"]],"start1":1718,"start2":1718,"length1":24,"length2":231}]],"length":2694,"saved":false}
{"ts":1351131786123,"patch":[[{"diffs":[[0,"eOf\n"],[-1,"    //base.isInstanceOf\n"],[0,"    "]],"start1":1994,"start2":1994,"length1":32,"length2":8}]],"length":2670,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351172251122,"patch":[[{"diffs":[[0," }\n\n"],[-1,"    //base.isBoolean\n    //base.isObject\n    //base.isTypeOf\n    //base.isFalse        \n    //base.isTrue         \n    //base.isNaN          \n    //base.isNotNaN       \n    //base.isNull         \n    //base.isNotNull      \n    //base.isUndefined    \n    //base.isNotUndefined \n\n"],[0,"//Se"]],"start1":1933,"start2":1933,"length1":286,"length2":8},{"diffs":[[0,"));   \n\n"],[1,"\n/* Gooi.Assert */\n    //base.isBoolean\n    //base.isObject\n    //base.isTypeOf\n    //base.isFalse        \n    //base.isTrue         \n    //base.isNaN          \n    //base.isNotNaN       \n    //base.isNull         \n    //base.isNotNull      \n    //base.isUndefined    \n    //base.isNotUndefined "]],"start1":2384,"start2":2384,"length1":8,"length2":303}]],"length":2687,"saved":false}
{"ts":1351175331469,"patch":[[{"diffs":[[0,"       if(! "],[-1,"_"],[1,"base."],[0,"ignore"],[-1,"()"],[0," )   \n      "]],"start1":1050,"start2":1050,"length1":33,"length2":35},{"diffs":[[0,"       if(! "],[-1,"_"],[1,"base."],[0,"ignore"],[-1,"()"],[0," )   \n      "]],"start1":1216,"start2":1216,"length1":33,"length2":35},{"diffs":[[0,"       if(! "],[-1,"_"],[1,"base."],[0,"ignore"],[-1,"()"],[0," )   \n      "]],"start1":1394,"start2":1394,"length1":33,"length2":35},{"diffs":[[0,"   if(! "],[-1,"_"],[1,"base."],[0,"ignore"],[-1,"()"],[0," ) {  \n "]],"start1":1574,"start2":1574,"length1":25,"length2":27},{"diffs":[[0,"f(! "],[-1,"_"],[1,"base."],[0,"ignore"],[-1,"()"],[0," )  "]],"start1":1802,"start2":1802,"length1":17,"length2":19}]],"length":2697,"saved":false}
